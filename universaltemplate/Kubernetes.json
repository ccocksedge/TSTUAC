{
    "agent": null,
    "agentCluster": null,
    "agentClusterVar": null,
    "agentFieldsRestriction": "No Restriction",
    "agentType": "Any",
    "agentVar": null,
    "alwaysCancelOnFinish": false,
    "autoCleanup": false,
    "automaticOutputRetrievalFieldsRestriction": "No Restriction",
    "broadcastCluster": null,
    "broadcastClusterVar": null,
    "commands": [],
    "createConsole": false,
    "credentialFieldsRestriction": "No Restriction",
    "credentials": null,
    "credentialsVar": null,
    "description": "Kubernetes List (Get), Create and Delete Functions",
    "desktopInteract": false,
    "elevateUser": false,
    "environment": [],
    "environmentVariablesFieldsRestriction": "No Restriction",
    "events": [],
    "exitCodeOutput": null,
    "exitCodeProcessing": "Success Exitcode Range",
    "exitCodeProcessingFieldsRestriction": "No Restriction",
    "exitCodeText": null,
    "exitCodes": "0",
    "exportReleaseLevel": "7.4.0.0",
    "extension": null,
    "fields": [
        {
            "arrayFieldValue": [],
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceDynamic": false,
            "choiceFields": [],
            "choiceSortOption": "Sequence",
            "choices": [
                {
                    "fieldValue": "list",
                    "fieldValueLabel": "List (Get)",
                    "sequence": 0,
                    "sysId": "1d52c7d5f41d4c8da51b54ee34fe46f9",
                    "useFieldValueForLabel": false
                },
                {
                    "fieldValue": "create",
                    "fieldValueLabel": "Create",
                    "sequence": 1,
                    "sysId": "b95fd5c826e94309993a73205a809e12",
                    "useFieldValueForLabel": false
                },
                {
                    "fieldValue": "delete",
                    "fieldValueLabel": "Delete",
                    "sequence": 2,
                    "sysId": "68ba7956ba354aa4bb4db035b26e7389",
                    "useFieldValueForLabel": false
                },
                {
                    "fieldValue": "replace",
                    "fieldValueLabel": "Replace",
                    "sequence": 3,
                    "sysId": "248219d58ff945849144edda58c725a5",
                    "useFieldValueForLabel": false
                }
            ],
            "defaultListView": false,
            "extensionStatus": false,
            "fieldLength": null,
            "fieldMapping": "Choice Field 1",
            "fieldRestriction": "No Restriction",
            "fieldType": "Choice",
            "fieldValue": null,
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": true,
            "hint": "Kubernetes Function",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "Function",
            "name": "function",
            "noSpaceIfHidden": false,
            "preserveOutputOnRerun": false,
            "preserveValueIfHidden": false,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": false,
            "required": false,
            "sequence": 0,
            "showIfField": null,
            "showIfFieldValue": null,
            "sysId": "abcdf6e326d248af968e4856aa9a6d62",
            "textType": "Plain"
        },
        {
            "arrayFieldValue": [],
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceDynamic": false,
            "choiceFields": [],
            "choiceSortOption": "Sequence",
            "choices": [
                {
                    "fieldValue": "pod",
                    "fieldValueLabel": "Pod",
                    "sequence": 0,
                    "sysId": "dae24cb3acac4c35944512528c01c507",
                    "useFieldValueForLabel": false
                },
                {
                    "fieldValue": "deployment",
                    "fieldValueLabel": "Deployment",
                    "sequence": 1,
                    "sysId": "9fd848dce13849499820c96932602e2e",
                    "useFieldValueForLabel": false
                },
                {
                    "fieldValue": "namespace",
                    "fieldValueLabel": "Namespace",
                    "sequence": 2,
                    "sysId": "eb03697dad424f9fbb495611095fe3a1",
                    "useFieldValueForLabel": false
                }
            ],
            "defaultListView": false,
            "extensionStatus": false,
            "fieldLength": null,
            "fieldMapping": "Choice Field 2",
            "fieldRestriction": "No Restriction",
            "fieldType": "Choice",
            "fieldValue": null,
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": true,
            "hint": "Type of Kubernetes Object to perform the selected function against",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "Kubernetes Object",
            "name": "object",
            "noSpaceIfHidden": false,
            "preserveOutputOnRerun": false,
            "preserveValueIfHidden": false,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": false,
            "required": false,
            "sequence": 1,
            "showIfField": null,
            "showIfFieldValue": null,
            "sysId": "ec093b789d0f4b389c53122aca31fb76",
            "textType": "Plain"
        },
        {
            "arrayFieldValue": [],
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceDynamic": false,
            "choiceFields": [],
            "choiceSortOption": "Sequence",
            "choices": [],
            "defaultListView": false,
            "extensionStatus": false,
            "fieldLength": null,
            "fieldMapping": "Text Field 1",
            "fieldRestriction": "No Restriction",
            "fieldType": "Text",
            "fieldValue": null,
            "formColumnSpan": 1,
            "formEndRow": true,
            "formStartRow": false,
            "hint": "Name of the Kubernetes Object (Pod, Deployment, Namespace)",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "Object Name",
            "name": "objectname",
            "noSpaceIfHidden": false,
            "preserveOutputOnRerun": false,
            "preserveValueIfHidden": false,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": true,
            "required": false,
            "sequence": 2,
            "showIfField": "Choice Field 1",
            "showIfFieldValue": "create,delete,replace",
            "sysId": "65d22065b3a3407f96e59355edba7baa",
            "textType": "Plain"
        },
        {
            "arrayFieldValue": [],
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceDynamic": false,
            "choiceFields": [],
            "choiceSortOption": "Sequence",
            "choices": [],
            "defaultListView": false,
            "extensionStatus": false,
            "fieldLength": null,
            "fieldMapping": "Text Field 2",
            "fieldRestriction": "No Restriction",
            "fieldType": "Text",
            "fieldValue": "default",
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": true,
            "hint": "Kubernetes Namespace",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "Namespace",
            "name": "namespace",
            "noSpaceIfHidden": false,
            "preserveOutputOnRerun": false,
            "preserveValueIfHidden": false,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": false,
            "required": false,
            "sequence": 3,
            "showIfField": "Choice Field 1",
            "showIfFieldValue": "delete,create,replace",
            "sysId": "1637a401a9f544e9960eaa26c75a2529",
            "textType": "Plain"
        },
        {
            "arrayFieldValue": [],
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceDynamic": false,
            "choiceFields": [],
            "choiceSortOption": "Sequence",
            "choices": [],
            "defaultListView": false,
            "extensionStatus": false,
            "fieldLength": null,
            "fieldMapping": "Script Field 1",
            "fieldRestriction": "No Restriction",
            "fieldType": "Script",
            "fieldValue": null,
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": true,
            "hint": "Kubernetes Object Definition in YAML",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "YAML Definition",
            "name": "file",
            "noSpaceIfHidden": true,
            "preserveOutputOnRerun": false,
            "preserveValueIfHidden": false,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": true,
            "required": false,
            "sequence": 4,
            "showIfField": "Choice Field 1",
            "showIfFieldValue": "create,replace",
            "sysId": "cec81d6fbbf44b9fbdcf68ff84b7c51e",
            "textType": "Plain"
        },
        {
            "arrayFieldValue": [],
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceDynamic": false,
            "choiceFields": [],
            "choiceSortOption": "Sequence",
            "choices": [
                {
                    "fieldValue": "None",
                    "sequence": 0,
                    "sysId": "731b93ba9fbe48ceb3322cb7a14c1bb0",
                    "useFieldValueForLabel": true
                },
                {
                    "fieldValue": "Info",
                    "sequence": 1,
                    "sysId": "228c96c8fe3547e596ebf06eeebd030d",
                    "useFieldValueForLabel": true
                },
                {
                    "fieldValue": "Debug",
                    "sequence": 2,
                    "sysId": "1c3f7cec55984314a7ec5a4e54f8652c",
                    "useFieldValueForLabel": true
                },
                {
                    "fieldValue": "Warning",
                    "sequence": 3,
                    "sysId": "dade4cb99495493b94408498639411d7",
                    "useFieldValueForLabel": true
                },
                {
                    "fieldValue": "Critical",
                    "sequence": 4,
                    "sysId": "2a7f7ee694cf456f8d5a6be2048fccfc",
                    "useFieldValueForLabel": true
                }
            ],
            "defaultListView": false,
            "extensionStatus": false,
            "fieldLength": null,
            "fieldMapping": "Choice Field 3",
            "fieldRestriction": "No Restriction",
            "fieldType": "Choice",
            "fieldValue": "None",
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": true,
            "hint": "Controls messages issued from the Universal Task",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "Logging Level",
            "name": "loglevel",
            "noSpaceIfHidden": false,
            "preserveOutputOnRerun": false,
            "preserveValueIfHidden": false,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": false,
            "required": false,
            "sequence": 5,
            "showIfField": null,
            "showIfFieldValue": null,
            "sysId": "7cc7c90769e44d56bd687bcf2b954830",
            "textType": "Plain"
        }
    ],
    "logLevel": "Inherited",
    "name": "Kubernetes",
    "outputConditionOperator": "=",
    "outputConditionStrategy": "Match Any",
    "outputConditionValue": null,
    "outputContentType": null,
    "outputFailureOnly": false,
    "outputPathExpression": null,
    "outputReturnFile": null,
    "outputReturnNline": "100",
    "outputReturnSline": "1",
    "outputReturnText": null,
    "outputReturnType": "NONE",
    "outputType": "STDOUT",
    "retainSysIds": true,
    "runtimeDir": null,
    "script": "#!/opt/universal/python/bin/python\n# --\n#         Origins: Stonebranch\n#          Author: Colin Cocksedge colin.cocksedge@stonebranch.com\n#            Date: 24-MAR-2020\n#\n#    Copyright (c) Stonebranch, 2020.  All rights reserved.\n#\n# --\nversion = \"1.0\"\npurpose = \"Kubernetes\"\n# --\n#           Version History:    1.0     CCO     20-MAY-2020     Initial Version\n# --\n\n\n# -- Main Logic Function\ndef main():\n    script_setup()  # -- Import Required Modules, Setup Logging Format, Set Variables\n    kubernetes.config.load_kube_config()\n    global corev1, appsv1\n    corev1 = kubernetes.client.CoreV1Api()\n    appsv1 = kubernetes.client.AppsV1Api()\n    if args.function == \"list\":\n        kubernetes_list(args.object)\n    if args.function == \"delete\":\n        kubernetes_delete(args.object,args.objectname,args.namespace)\n    if args.function == \"create\":\n        kubernetes_create(args.object,args.file,args.namespace)\n    if args.function == \"replace\":\n        kubernetes_replace(args.object,args.file,args.namespace)\n\n# --\n\n\n# -- Import Required Modules, Setup Logging Format, Set Variables\ndef script_setup():\n    # -- Import required python modules\n    import argparse\n    import logging\n    import sys\n    import inspect\n    try:\n        import kubernetes.config\n    except:\n        try:\n            from pip import main as pipmain\n        except:\n            from pip._internal import main as pipmain\n        pipmain(\n            [\n                \"install\",\n                \"--trusted-host=pypi.python.org\",\n                \"--trusted-host=pypi.org\",\n                \"--trusted-host=files.pythonhosted.org\",\n                \"kubernetes\",\n            ]\n        )\n        import kubernetes.config\n        import kubernetes.client\n    try:\n        import yaml\n    except:\n        try:\n            from pip import main as pipmain\n        except:\n            from pip._internal import main as pipmain\n        pipmain(\n            [\n                \"install\",\n                \"--trusted-host=pypi.python.org\",\n                \"--trusted-host=pypi.org\",\n                \"--trusted-host=files.pythonhosted.org\",\n                \"pyyaml\",\n            ]\n        )\n        import yaml\n    global argparse, logging, sys, inspect, kubernetes, yaml\n    # -- Set Variables from Universal Task Form or Command Line Input\n    parser = argparse.ArgumentParser(description=\"Purpose : {0}\".format(purpose))\n    # ## --> Capture Universal Task Form Variables Here\n    parser.add_argument(\n        \"--function\",\n        default=\"${ops_kube_function}\",\n        help=\"Kubernetes Function\",\n        choices=[\"list\",\"delete\",\"create\",\"replace\"]\n    )\n    parser.add_argument(\n        \"--object\",\n        default=\"${ops_kube_object}\",\n        help=\"Kubernetes Object\",\n        choices=[\"namespace\",\"deployment\",\"pod\"]\n    )\n    parser.add_argument(\n        \"--objectname\",\n        default=\"${ops_kube_objectname}\",\n        help=\"Kubernetes Object Name\"\n    )\n    parser.add_argument(\n        \"--namespace\",\n        default=\"${ops_kube_namespace}\",\n        help=\"Kubernetes namespace\"\n    )\n    parser.add_argument(\n        \"--file\",\n        default=r\"${_scriptpath('${ops_kube_file}')}\",\n        help=\"Location of Kubernetes YAML File\",\n    )\n    # ## -->\n    parser.add_argument(\n        \"--loglevel\",\n        default=\"${ops_kube_loglevel}\",\n        help=\"Controls messages issued from the Script\",\n        choices=[\"None\",\"Info\",\"Debug\",\"Warning\",\"Critical\"]\n    )\n    global args\n    args = parser.parse_args()\n    # -- Setup Logging\n    numeric_level = getattr(logging, args.loglevel.upper(), None)\n    logging.basicConfig(\n        format=\"%(asctime)-15s - %(levelname)-8s - %(message)s\", level=numeric_level\n    )\n    # -- Print Paramater Values\n    logging.debug(\n        \"Executing version {0} with the following parameters : {1}\".format(\n            version, args\n        )\n    )\n    # ## --> Additional Setup Goes Here\n\n\n# --\n\n\n# ## --> Functions Go Here\n# -- Kubernetes List Functions (analagous to kubectl get)\ndef kubernetes_list(object):\n    logging.debug(\"Starting {0} Function\".format(inspect.currentframe().f_code.co_name))\n    # List pods\n    if object == \"pod\":\n        try:\n            pod_list = corev1.list_pod_for_all_namespaces()\n        except:\n            logging.error(\"Error Calling list_pod_for_all_namespaces : {0}\".format(sys.exc_info()))\n            sys.exit(1)\n        if not pod_list.items:\n            print (\"No resources found\")\n        else:\n            print(\"{0:50}{1:30}{2:30}{3:30}\".format(\"POD Name\",\n                                              \"Namespace\",\n                                              \"Status\",\n                                              \"ip Address\"))\n            for pod in pod_list.items:\n                print(\"{0:50}{1:30}{2:30}{3:30}\".format(pod.metadata.name,\n                                                  pod.metadata.namespace,\n                                                  pod.status.phase,\n                                                  pod.status.pod_ip))\n    # List namespaces\n    if object == \"namespace\":\n        try:\n            namespace_list = corev1.list_namespace()\n        except:\n            logging.error(\"Error Calling list_namespace : {0}\".format(sys.exc_info()))\n            sys.exit(1)\n        if not namespace_list.items:\n            print (\"No resources found\")\n        else:\n            print(\"{0:30}{1:30}\".format(\"NAMESPACE Name\",\n                                        \"Status\"))\n            for namespace in namespace_list.items:\n                print(\"{0:30}{1:30}\".format(namespace.metadata.name, \n                                            namespace.status.phase))\n    # List deployments\n    if object == \"deployment\":\n        try:\n            deployment_list = appsv1.list_deployment_for_all_namespaces()\n        except:\n            logging.error(\"Error Calling list_deployment_for_all_namespaces : {0}\".format(sys.exc_info()))\n            sys.exit(1)\n        if not deployment_list.items:\n            print (\"No resources found\")\n        else:\n            print(\"{0:30}{1:30}{2:30}\".format(\"DEPLOYMENT Name\", \n                                  \"Namespace\",\n                                  \"ip Address\"))\n            for deployment in deployment_list.items:\n                print(\"{0:30}{1:30}\".format(deployment.metadata.name, \n                                            deployment.metadata.namespace))\n        \n    return ()\n# --\n# -- Kubernetes Delete Functions (analagous to kubectl delete)\ndef kubernetes_delete(object,objectname,namespace):\n    # Delete pod\n    if object == \"pod\":\n        try:\n            pod_delete = corev1.delete_namespaced_pod(objectname, namespace)\n            print(pod_delete)\n        except:\n            logging.error(\"Error Calling delete_namespaced_pod : {0}\".format(sys.exc_info()))\n            sys.exit(1)       \n    # Delete namespace\n    if object == \"namespace\":\n        try:\n            namespace_delete = corev1.delete_namespace(objectname)\n            print(namespace_delete)\n        except:\n            logging.error(\"Error Calling delete_namespace : {0}\".format(sys.exc_info()))\n            sys.exit(1)\n    # Delete Deployment\n    if object == \"deployment\":\n        try:\n            deployment_delete = appsv1.delete_namespaced_deployment(objectname, namespace)\n            print(deployment_delete)\n        except:\n            logging.error(\"Error Calling delete_namespaced_deployment : {0}\".format(sys.exc_info()))\n            sys.exit(1)       \n    return()\n# --\n# -- Kubernetes Create Functions (analagous to kubectl create)\ndef kubernetes_create(object,file,namespace):\n    # Load kubernetes yaml definition file as JSON object\n    kube_yaml = yaml.safe_load(open(file, 'rb'))\n    # Create pod\n    if object == \"pod\":\n        try:\n            pod_create = corev1.create_namespaced_pod(namespace, body=kube_yaml)\n            print(pod_create)\n        except:\n            logging.error(\"Error Calling create_namespaced_pod : {0}\".format(sys.exc_info()))\n            sys.exit(1)       \n    # Create namespace\n    if object == \"namespace\":\n        try:\n            namespace_create = corev1.create_namespace(body=kube_yaml)\n            print(namespace_create)\n        except:\n            logging.error(\"Error Calling create_namespace : {0}\".format(sys.exc_info()))\n            sys.exit(1)\n    # Create deployment\n    if object == \"deployment\":\n        try:\n            deployment_create = appsv1.create_namespaced_deployment(namespace, body=kube_yaml)\n            print(deployment_create)\n        except:\n            logging.error(\"Error Calling create_namespaced_deployment : {0}\".format(sys.exc_info()))\n            sys.exit(1)       \n    return()\n# --\n# -- Kubernetes Replace Functions (analagous to kubectl replace)\ndef kubernetes_replace(object,file,namespace):\n    # Load kubernetes yaml definition file as JSON object\n    kube_yaml = yaml.safe_load(open(file, 'rb'))\n    # Create pod\n    if object == \"pod\":\n        try:\n            pod_replace = corev1.replace_namespaced_pod(namespace, body=kube_yaml)\n            print(pod_replace)\n        except:\n            logging.error(\"Error Calling replace_namespaced_pod : {0}\".format(sys.exc_info()))\n            sys.exit(1)       \n    # Create namespace\n    if object == \"namespace\":\n        try:\n            namespace_replace = corev1.replace_namespace(body=kube_yaml)\n            print(namespace_replace)\n        except:\n            logging.error(\"Error Calling replace_namespace : {0}\".format(sys.exc_info()))\n            sys.exit(1)\n    # Create deployment\n    if object == \"deployment\":\n        try:\n            deployment_replace = appsv1.replace_namespaced_deployment(namespace, body=kube_yaml)\n            print(deployment_replace)\n        except:\n            logging.error(\"Error Calling replace_namespaced_deployment : {0}\".format(sys.exc_info()))\n            sys.exit(1)       \n    return()\n# -- \n# ## -->\n# -- Execute\nmain()",
    "scriptTypeWindows": "uapy",
    "scriptUnix": null,
    "scriptWindows": null,
    "sendVariables": "None",
    "sysId": "89f3c35d38344286a5c5c33692f4aabf",
    "templateType": "Script",
    "useCommonScript": true,
    "variablePrefix": "kube",
    "waitForOutput": false
}