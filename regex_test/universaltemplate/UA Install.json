{
    "agent": null,
    "agentCluster": null,
    "agentClusterVar": null,
    "agentFieldsRestriction": "No Restriction",
    "agentType": "Any",
    "agentVar": null,
    "alwaysCancelOnFinish": false,
    "autoCleanup": false,
    "automaticOutputRetrievalFieldsRestriction": "No Restriction",
    "broadcastCluster": null,
    "broadcastClusterVar": null,
    "commands": [],
    "createConsole": false,
    "credentialFieldsRestriction": "No Restriction",
    "credentials": null,
    "credentialsVar": null,
    "description": "Universal Agent Install via SSH",
    "desktopInteract": false,
    "elevateUser": false,
    "environment": [],
    "environmentVariablesFieldsRestriction": "No Restriction",
    "events": [],
    "exitCodeOutput": null,
    "exitCodeProcessing": "Success Exitcode Range",
    "exitCodeProcessingFieldsRestriction": "No Restriction",
    "exitCodeText": null,
    "exitCodes": "0",
    "exportReleaseLevel": "7.4.0.0",
    "extension": null,
    "fields": [
        {
            "arrayFieldValue": [],
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceDynamic": false,
            "choiceFields": [],
            "choiceSortOption": "Sequence",
            "choices": [
                {
                    "fieldValue": "download",
                    "fieldValueLabel": "Download - To Runtime Directory",
                    "sequence": 0,
                    "sysId": "ceb2b385c324487ead073ca83eec5493",
                    "useFieldValueForLabel": false
                },
                {
                    "fieldValue": "install",
                    "fieldValueLabel": "Install - From Runtime Directory",
                    "sequence": 1,
                    "sysId": "0a62189f364d43cb935e8371ac9ec1f0",
                    "useFieldValueForLabel": false
                }
            ],
            "defaultListView": false,
            "extensionStatus": false,
            "fieldLength": null,
            "fieldMapping": "Choice Field 1",
            "fieldRestriction": "No Restriction",
            "fieldType": "Choice",
            "fieldValue": null,
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": true,
            "hint": "Select whether to Download UA installation file or Install / Upgrade UA from an already downloaded UA installation file",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "Action",
            "name": "action",
            "noSpaceIfHidden": false,
            "preserveOutputOnRerun": false,
            "preserveValueIfHidden": false,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": false,
            "required": false,
            "sequence": 0,
            "showIfField": null,
            "showIfFieldValue": null,
            "sysId": "f2269f1992754cd082fa6c005384abbe",
            "textType": "Plain"
        },
        {
            "arrayFieldValue": [],
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceDynamic": false,
            "choiceFields": [],
            "choiceSortOption": "Sequence",
            "choices": [],
            "defaultListView": false,
            "extensionStatus": false,
            "fieldLength": null,
            "fieldMapping": "Text Field 1",
            "fieldRestriction": "No Restriction",
            "fieldType": "Text",
            "fieldValue": "latest",
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": true,
            "hint": "Universal Agent Version, i.e. 6.8.0.0 or latest",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "UA Version",
            "name": "version",
            "noSpaceIfHidden": false,
            "preserveOutputOnRerun": false,
            "preserveValueIfHidden": false,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": false,
            "required": true,
            "sequence": 1,
            "showIfField": null,
            "showIfFieldValue": null,
            "sysId": "4dcb1b4bad804f38b5cb3a3effc64892",
            "textType": "Plain"
        },
        {
            "arrayFieldValue": [],
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceDynamic": false,
            "choiceFields": [],
            "choiceSortOption": "Sequence",
            "choices": [
                {
                    "fieldValue": "windows-x64",
                    "sequence": 0,
                    "sysId": "c773231ccedb46e1814963d2a0524c27",
                    "useFieldValueForLabel": true
                },
                {
                    "fieldValue": "windows-x64-um",
                    "sequence": 1,
                    "sysId": "291ca71e47ef407f80cd967e32299345",
                    "useFieldValueForLabel": true
                },
                {
                    "fieldValue": "linux-3.10-x86_64",
                    "sequence": 2,
                    "sysId": "4e537be0006f48aba6efc5f66fa16998",
                    "useFieldValueForLabel": true
                },
                {
                    "fieldValue": "linux-3-x86_64-deb",
                    "sequence": 3,
                    "sysId": "42577ab46cf4411189814c12ca54baa8",
                    "useFieldValueForLabel": true
                },
                {
                    "fieldValue": "linux-3.10-ppc64le",
                    "sequence": 4,
                    "sysId": "b0ea0594a5e74007b8edda328eb7dad2",
                    "useFieldValueForLabel": true
                }
            ],
            "defaultListView": false,
            "extensionStatus": false,
            "fieldLength": null,
            "fieldMapping": "Choice Field 2",
            "fieldRestriction": "No Restriction",
            "fieldType": "Choice",
            "fieldValue": null,
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": false,
            "hint": null,
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "UA Platform",
            "name": "platform",
            "noSpaceIfHidden": false,
            "preserveOutputOnRerun": false,
            "preserveValueIfHidden": false,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": false,
            "required": false,
            "sequence": 2,
            "showIfField": null,
            "showIfFieldValue": null,
            "sysId": "a4db7a73a0704c82888fbf23725bf740",
            "textType": "Plain"
        },
        {
            "arrayFieldValue": [],
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceDynamic": false,
            "choiceFields": [],
            "choiceSortOption": "Sequence",
            "choices": [],
            "defaultListView": false,
            "extensionStatus": false,
            "fieldLength": null,
            "fieldMapping": "Text Field 2",
            "fieldRestriction": "No Restriction",
            "fieldType": "Text",
            "fieldValue": null,
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": true,
            "hint": "Remote SSH Server for UA Install or Remote UA (UDM) Server for UA Upgrade",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "Remote Server",
            "name": "host",
            "noSpaceIfHidden": true,
            "preserveOutputOnRerun": false,
            "preserveValueIfHidden": false,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": true,
            "required": false,
            "sequence": 3,
            "showIfField": "Choice Field 1",
            "showIfFieldValue": "install",
            "sysId": "9f7403aca1844d26a7d9d9fa9cba41d6",
            "textType": "Plain"
        },
        {
            "arrayFieldValue": [],
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceDynamic": false,
            "choiceFields": [],
            "choiceSortOption": "Sequence",
            "choices": [],
            "defaultListView": false,
            "extensionStatus": false,
            "fieldLength": null,
            "fieldMapping": "Integer Field 1",
            "fieldRestriction": "No Restriction",
            "fieldType": "Integer",
            "fieldValue": "22",
            "formColumnSpan": 1,
            "formEndRow": true,
            "formStartRow": false,
            "hint": "Port for Remote SSH Server Install, or Port for Remote UA (UDM) Server Upgrade",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "Remote Server Port",
            "name": "port",
            "noSpaceIfHidden": true,
            "preserveOutputOnRerun": false,
            "preserveValueIfHidden": false,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": true,
            "required": false,
            "sequence": 5,
            "showIfField": "Choice Field 1",
            "showIfFieldValue": "install",
            "sysId": "5866e4f785b14a6bad12a434f6cd7a55",
            "textType": "Plain"
        },
        {
            "arrayFieldValue": [],
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceDynamic": false,
            "choiceFields": [],
            "choiceSortOption": "Sequence",
            "choices": [],
            "defaultListView": false,
            "extensionStatus": false,
            "fieldLength": null,
            "fieldMapping": "Credential Field 1",
            "fieldRestriction": "No Restriction",
            "fieldType": "Credential",
            "fieldValue": null,
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": true,
            "hint": "Login Credentials for Remote SSH Server Install, or Login Credentials for Remote UA (UDM) Server Upgrade",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "Remote Server Credential",
            "name": "credential",
            "noSpaceIfHidden": true,
            "preserveOutputOnRerun": false,
            "preserveValueIfHidden": false,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": true,
            "required": false,
            "sequence": 7,
            "showIfField": "Boolean Field 1",
            "showIfFieldValue": "false",
            "sysId": "13e975cd68e34d46b2ee7176c9a1c57c",
            "textType": "Plain"
        },
        {
            "arrayFieldValue": [],
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceDynamic": false,
            "choiceFields": [],
            "choiceSortOption": "Sequence",
            "choices": [],
            "defaultListView": false,
            "extensionStatus": false,
            "fieldLength": null,
            "fieldMapping": "Text Field 3",
            "fieldRestriction": "No Restriction",
            "fieldType": "Text",
            "fieldValue": null,
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": true,
            "hint": "Login Credentials for Remote SSH Server Install",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "Remote Server Credential",
            "name": "credentialvar",
            "noSpaceIfHidden": true,
            "preserveOutputOnRerun": false,
            "preserveValueIfHidden": false,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": true,
            "required": false,
            "sequence": 9,
            "showIfField": "Boolean Field 1",
            "showIfFieldValue": "true",
            "sysId": "ade24794c73c45aba2fd5358e7b2af03",
            "textType": "Plain"
        },
        {
            "arrayFieldValue": [],
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceDynamic": false,
            "choiceFields": [],
            "choiceSortOption": "Sequence",
            "choices": [],
            "defaultListView": false,
            "extensionStatus": false,
            "fieldLength": null,
            "fieldMapping": "Boolean Field 1",
            "fieldRestriction": "No Restriction",
            "fieldType": "Boolean",
            "fieldValue": "false",
            "formColumnSpan": 1,
            "formEndRow": true,
            "formStartRow": false,
            "hint": "Allows the Remote Server Credential to be specified a variable",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "Credential Variable",
            "name": "credentialchoice",
            "noSpaceIfHidden": false,
            "preserveOutputOnRerun": false,
            "preserveValueIfHidden": false,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": false,
            "required": false,
            "sequence": 10,
            "showIfField": null,
            "showIfFieldValue": null,
            "sysId": "620e2e26f80642cb8d089ccba5d067be",
            "textType": "Plain"
        },
        {
            "arrayFieldValue": [],
            "arrayNameTitle": "Option",
            "arrayValueTitle": "Value",
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceDynamic": false,
            "choiceFields": [],
            "choiceSortOption": "Sequence",
            "choices": [],
            "defaultListView": false,
            "extensionStatus": false,
            "fieldLength": null,
            "fieldMapping": "Array Field 1",
            "fieldRestriction": "No Restriction",
            "fieldType": "Array",
            "fieldValue": null,
            "formColumnSpan": 3,
            "formEndRow": false,
            "formStartRow": true,
            "hint": "Specify Installation Options for UA Installer",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "UA Installation Options",
            "name": "installopts",
            "noSpaceIfHidden": true,
            "preserveOutputOnRerun": false,
            "preserveValueIfHidden": false,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": false,
            "required": false,
            "sequence": 11,
            "showIfField": "Choice Field 1",
            "showIfFieldValue": "install",
            "sysId": "7b4148930563403da5c8831b5e7598dd",
            "textType": "Plain"
        },
        {
            "arrayFieldValue": [],
            "arrayNameTitle": null,
            "arrayValueTitle": null,
            "booleanNoValue": null,
            "booleanValueType": "true/false",
            "booleanYesValue": null,
            "choiceAllowEmpty": false,
            "choiceAllowMultiple": false,
            "choiceDynamic": false,
            "choiceFields": [],
            "choiceSortOption": "Sequence",
            "choices": [
                {
                    "fieldValue": "None",
                    "sequence": 0,
                    "sysId": "46f3b3b87e434d6c90e1c26f7d49c227",
                    "useFieldValueForLabel": true
                },
                {
                    "fieldValue": "Info",
                    "sequence": 1,
                    "sysId": "37c3a52640954d68ae9fd9c330628bde",
                    "useFieldValueForLabel": true
                },
                {
                    "fieldValue": "Debug",
                    "sequence": 2,
                    "sysId": "5dbb5ee0ab7c478c88e8f2d3e4a821e8",
                    "useFieldValueForLabel": true
                },
                {
                    "fieldValue": "Warning",
                    "sequence": 3,
                    "sysId": "6e5a6e6424d8468c9f6c8cc314bf3abb",
                    "useFieldValueForLabel": true
                },
                {
                    "fieldValue": "Error",
                    "sequence": 4,
                    "sysId": "a2f2bcee6387448e81c78773782c7c52",
                    "useFieldValueForLabel": true
                },
                {
                    "fieldValue": "Critical",
                    "sequence": 5,
                    "sysId": "d3a84dfe049646ee88de902196762cd4",
                    "useFieldValueForLabel": true
                }
            ],
            "defaultListView": false,
            "extensionStatus": false,
            "fieldLength": null,
            "fieldMapping": "Choice Field 3",
            "fieldRestriction": "No Restriction",
            "fieldType": "Choice",
            "fieldValue": "None",
            "formColumnSpan": 1,
            "formEndRow": false,
            "formStartRow": true,
            "hint": "Controls messages issued from the Universal Task Script",
            "intFieldMax": null,
            "intFieldMin": null,
            "label": "Loging Level",
            "name": "loglevel",
            "noSpaceIfHidden": false,
            "preserveOutputOnRerun": false,
            "preserveValueIfHidden": false,
            "requireIfField": null,
            "requireIfFieldValue": null,
            "requireIfVisible": false,
            "required": false,
            "sequence": 12,
            "showIfField": null,
            "showIfFieldValue": null,
            "sysId": "b085b9768df34bd7aab65543e10f6370",
            "textType": "Plain"
        }
    ],
    "logLevel": "Inherited",
    "name": "UA Install",
    "outputConditionOperator": "=",
    "outputConditionStrategy": "Match Any",
    "outputConditionValue": null,
    "outputContentType": null,
    "outputFailureOnly": false,
    "outputPathExpression": null,
    "outputReturnFile": null,
    "outputReturnNline": "100",
    "outputReturnSline": "1",
    "outputReturnText": null,
    "outputReturnType": "NONE",
    "outputType": "STDOUT",
    "runtimeDir": null,
    "script": "#!/opt/universal/python/bin/python\n# --\n#         Origins: Stonebranch\n#          Author: Colin Cocksedge colin.cocksedge@stonebranch.com\n#            Date: 06-June-2020\n#\n#    Copyright (c) Stonebranch, 2020.  All rights reserved.\n#\n# --\nversion = \"1.0\"\npurpose = \"Universal Agent Install via SSH\"\n# --\n#           Version History:    1.0     CCO     03-JUN-2020     Initial Version\n#                               1.1     CCO     21-AUG-2020     Added Credential Variable Support from Universal Task Form\n# --\n\n# -- Main Logic Function\ndef main():\n    script_setup()  # -- Import Required Modules, Setup Logging Format, Set Variables\n    ua_file=format_install_file_name(args.version,args.platform)\n    if args.action == \"download\":\n        # http Download from SB Website\n        download_ua_install(ua_file,args.version)\n    if args.action == \"install\":\n        if args.credentialchoice:\n            args.username = \"${_credentialUser('${ops_uainst_credentialvar}')}\"\n            args.password = \"${_credentialPwd('${ops_uainst_credentialvar}')}\"\n            if str(args.username[0][:1]) == \"$\":\n                logging.error(\"Remote Server Credential Variable did not resolve to a valid Credential Definition\")\n                sys.exit(1)\n        # open ssh session to remote ssh server\n        ssh_session=ssh_connect(args.host,args.port,args.username,args.password,args.passphrase,args.privatekey)\n        # ssh upload to remote ssh server\n        ssh_upload_ua_install(ssh_session,ua_file)\n        # install ua on ssh server\n        ssh_install_ua(ssh_session,ua_file,args.installopts,args.platform)\n        # close ssh session\n        ssh_session.close()\n# --\n\n# -- Import Required Modules, Setup Logging Format, Set Variables\ndef script_setup():\n    # -- Import required python modules\n    import argparse\n    import logging\n    import sys\n    import os\n    import inspect\n    import subprocess\n\n    # -- Import paramiko module, if error then install paramiko\n    try:\n        import paramiko\n    except:\n        try:\n            from pip import main as pipmain\n        except:\n            from pip._internal import main as pipmain\n        pipmain(\n            [\n                \"install\",\n                \"--trusted-host=pypi.python.org\",\n                \"--trusted-host=pypi.org\",\n                \"--trusted-host=files.pythonhosted.org\",\n                \"paramiko\",\n            ]\n        )\n        import paramiko\n        \n    # -- Import requests module, if error then install requests\n    try:\n        import requests\n    except:\n        try:\n            from pip import main as pipmain\n        except:\n            from pip._internal import main as pipmain\n        pipmain(\n            [\n                \"install\",\n                \"--trusted-host=pypi.python.org\",\n                \"--trusted-host=pypi.org\",\n                \"--trusted-host=files.pythonhosted.org\",\n                \"requests\",\n            ]\n        )\n        import requests\n        \n    global argparse, logging, sys, paramiko, os, inspect, requests, subprocess\n\n    # -- Set Variables from Universal Task Form or Command Line Input\n    parser = argparse.ArgumentParser(description=\"Purpose : {0}\".format(purpose))\n    # ## --> Capture Universal Task Form Variables Here\n    parser.add_argument(\n        \"--action\",\n        default=\"${ops_uainst_action}\",\n        help=\"Action -- Download Universal Agent Install File or Install Universal Agent\",\n        choices=[\"download\",\"install\",\"upgrade\"]\n    )\n    parser.add_argument(\n        \"--version\",\n        default=\"${ops_uainst_version}\",\n        help=\"Universal Agent Version, i.e. 6.8.0.0 or latest\"\n    )\n    parser.add_argument(\n        \"--platform\",\n        default=\"${ops_uainst_platform}\",\n        help=\"Type of Platform\",\n        choices=[\"windows-x64\",\"windows-x64-um\",\"linux-3.10-x86_64\",\"linux-3-x86_64-deb\",\"linux-3.10-ppc64le\"]\n    )\n    parser.add_argument(\n        \"--host\",\n        default=r\"${ops_uainst_host}\",\n        help=\"Remote SSH Server\"\n    )\n    parser.add_argument(\n        \"--port\",\n        #type=int,\n        default=\"${ops_uainst_port}\",\n        help=\"Port for Remote SSH Server\"\n    )\n    parser.add_argument(\n        \"--credentialchoice\",\n        default=\"${ops_uainst_credentialchoice}\",\n        type=str2bool,\n        help=\"\",\n    )\n    parser.add_argument(\n        \"--username\",\n        default=\"${_credentialUser('${ops_uainst_credential}')}\",\n        help=\"Username for Remote SSH Server\"\n    )\n    parser.add_argument(\n        \"--password\",\n        default=\"${_credentialPwd('${ops_uainst_credential}')}\",\n        help=\"Password for Remote SSH Server\"\n    )\n    parser.add_argument(\n        \"--privatekey\",\n        default=r\"${_credentialKeyLoc('${ops_uainst_credential}')}\",\n        help=\"Location of the SSH Private Key\"\n    )\n    parser.add_argument(\n        \"--passphrase\",\n        default=\"${_credentialPassphrase('${ops_uainst_credential}')}\",\n        help=\"Password for SSH private Key\"\n    )\n    parser.add_argument(\n        \"--installopts\",\n        default='${_convertArrayFieldVariable(\"ops_uainst_installopts\",\"=\",\" \")}',\n        help=\"build arguments (--installopts '--opt1 value1 --opt2 value2')\"\n    )\n    # ## -->\n    parser.add_argument(\n        \"--loglevel\",\n        default=\"${ops_uainst_loglevel}\",\n        help=\"Controls messages issued from the Script\",\n        choices=[\"None\",\"Info\",\"Debug\",\"Warning\",\"Critical\"]\n    )\n    global args\n    args = parser.parse_args()\n    # -- Setup Logging\n    numeric_level = getattr(logging, args.loglevel.upper(), None)\n    logging.basicConfig(\n        format=\"%(asctime)-15s - %(levelname)-8s - %(message)s\", level=numeric_level\n    )\n    # -- Print Paramater Values\n    logging.debug(\n        \"Executing version {0} with the following parameters : {1}\".format(\n            version, args\n        )\n    )\n    # ## --> Additional Setup Goes Here\n\n# --\n\n# ## --> Functions Go Here\n\n# -- Format Universal Agent Installation File Name\ndef format_install_file_name(version,platform):\n    logging.debug(\"Starting {0} Function\".format(inspect.currentframe().f_code.co_name))\n    ua_file=\"sb-{0}-{1}\".format(version,platform)\n    if args.platform[0:3] == \"win\":\n        ua_file=\"{0}.exe\".format(ua_file)\n    else:\n        ua_file=\"{0}.tar.Z\".format(ua_file)\n    logging.debug(\"UA Install File Name : {0}\".format(ua_file))\n    return(ua_file)\n# --\n# -- Download UA Instalation File\ndef download_ua_install(ua_file,version):\n    logging.debug(\"Starting {0} Function\".format(inspect.currentframe().f_code.co_name))\n    if version != \"latest\":    \n        ua_version=\"{0}.x\".format(version[0:3])\n    else:\n        ua_version=version\n    download_url = \"https://downloads.stonebranch.com/{0}/{1}\".format(ua_version,ua_file)\n    logging.debug(\"UA Download URL : {0}\".format(download_url))\n    try:\n        download_ua = requests.get(download_url)\n        open(ua_file, 'wb').write(download_ua.content)\n    except Exception:\n        logging.error(\"Error Downloading Install File : {0}\".format(sys.exc_info()))\n        sys.exit(1)\n    if download_ua.ok:\n        logging.info(\"Downloaded {0}\".format(ua_file))\n    else:\n        logging.error(\"Download Failed with Status Code : {0}\".format(download_ua.status_code))\n        sys.exit(download_ua.status_code)\n    return ()\n# --\n# -- Connect to Remote SSH Server and Authenticate\ndef ssh_connect(host,port,username,password,passphrase,privatekey):\n    logging.debug(\"Starting {0} Function\".format(inspect.currentframe().f_code.co_name))\n    logging.info(\"Connect to Host = {0} on Port = {1}\".format(host, port))\n    try:\n        session = paramiko.SSHClient()\n        session.load_system_host_keys()\n        session.set_missing_host_key_policy(paramiko.AutoAddPolicy())\n    except:\n        logging.error(\n            \"Error Connecting to Remote SSH Server {0}\".format(sys.exc_info()[0])\n        )\n        sys.exit(1)\n    # Authenticate to SSH Server\n    if len(privatekey) != 0 and str(privatekey[0][:1]) != \"$\":\n        # Authenticate with Public Key\n        # Check if Privatekey file exists\n        if not os.path.isfile(privatekey):\n            logging.error(\"No such private key {0}\".format(privatekey))\n            sys.exit(1)\n        try:\n            if str(privatekey[0][:1]) != \"$\":\n                # Private Key with Passphrase\n                session.connect(args.host, port=args.port, username=username, passphrase=passphrase, key_filename=privatekey)\n            else:\n                # Private Key without Passphrase\n                session.connect(args.host, port=args.port, username=username, key_filename=privatekey)\n        except:\n            logging.error(\n                \"Error Connecting to Remote SSH Server {0}\".format(sys.exc_info()[0])\n            )\n            sys.exit(1)\n    else:\n        # Authenticate with User and Password\n        try:\n            session.connect(host, port=port, username=username, password=password)\n        except:\n            logging.error(\n                \"Error Connecting to Remote SSH Server {0}\".format(sys.exc_info()[0])\n            )\n            sys.exit(1)\n    return(session)\n# --\n# -- SSH Upload UA Instalation File\ndef ssh_upload_ua_install(type,ssh_session,ua_file):\n    logging.debug(\"Starting {0} Function\".format(inspect.currentframe().f_code.co_name))\n    logging.info(\"Transfer File = {0}\".format(ua_file))\n    try:\n        sftp = ssh_session.open_sftp()\n        sftp.put(ua_file, ua_file)\n        sftp.close()\n    except:\n        logging.error(\n            \"Error Transferring UA Install File : {0}\".format(sys.exc_info()[0])\n        )\n        sys.exit(1)\n    return()\n# --\n# -- UDM Upload UA Instalation File\ndef udm_upload_ua_install(host,port,username,password,ua_file):\n    logging.debug(\"Starting {0} Function\".format(inspect.currentframe().f_code.co_name))\n    logging.info(\"Transfer File = {0}\".format(ua_file))\n    udmscript = [\n        \"set _echo=yes \\n\",\n        \"set _halton=4 \\n\",\n        \"open uaserver=\" + host + \" port=\" + port + \" user=\" + username + \" pwd=\" + password + \"\\n\",\n        \"attrib uaserver createop=replace \\n\",\n        \"copy local=\" + ua_file + \"\\n\",\n    ]\n    udmscriptfile = open(\"MyFile.udm\", \"w\")\n    udmscriptfile.writelines(udmscript)\n    udmscriptfile.close()\n    try:\n        udmcommand = subprocess.run('udm -script MyFile.udm -level info', shell=True, stderr=subprocess.STDOUT, stdout=subprocess.PIPE)\n        os.write(1, udmcommand.stdout)\n    except:\n        logging.error(\"{0}\".format(sys.exc_info()))\n        sys.exit(1)\n    logging.info(\"Transfer File Return Code = {0} \".format(udmcommand.returncode))\n    if udmcommand.returncode:\n        sys.exit(1)\n# --\n# -- SSH Install UA Instalation File\ndef ssh_install_ua(ssh_session,ua_file,ua_installopts,platform):\n    logging.debug(\"Starting {0} Function\".format(inspect.currentframe().f_code.co_name))\n    logging.info(\"Installing from {0} with options {1}\".format(ua_file,ua_installopts))\n    if str(ua_installopts[0][:1]) == \"$\":\n        ua_installopts=\"\"\n    if platform[0:3] == \"win\":\n        if args.platform[12:2] == \"um\":\n            ua_installopts=ua_installopts.replace(\"=\",\" \")\n            command='{0} -silent {1}\"'.format(ua_file,ua_installopts)\n        else:    \n            command='{0} /s /w /v\"/qn {1}\"'.format(ua_file,ua_installopts)\n        run_command(ssh_session,command)\n    else:\n        # Install UNIX \n        command=\"zcat {0} | tar xvf -\".format(ua_file)    \n        run_command(ssh_session,command)\n        ua_installopts=ua_installopts.replace(\"=\",\" \")\n        command=\"./unvinst {0}\".format(ua_installopts)\n        run_command(ssh_session,command)\n            \n    return()\n# --\n# -- Execute Command on Remote SSH Server\ndef run_command(ssh_session,command):\n    logging.debug(\"Starting {0} Function\".format(inspect.currentframe().f_code.co_name))\n    logging.info(\"Executing Command {0}\".format(command))\n    try:\n        channel = ssh_session.get_transport().open_session()\n        channel.exec_command(command)\n        channel.shutdown_write()\n    except:\n        logging.error(\n            \"Error Executing Command on Remote SSH Server {0}\".format(sys.exc_info()[0])\n        )\n        sys.exit(1)\n    stdout = channel.makefile().read()\n    stderr = channel.makefile_stderr().read()\n    exit_code = channel.recv_exit_status()\n    channel.close()\n    # Print STDOUT and STDERR\n    print (\"-- Output from Command : {0}\".format(command))\n    print(stdout.decode('utf-8'))\n    print(stderr.decode('utf-8'))\n    logging.info(\"RunCommand Exit status = {0}\".format(exit_code))\n    if exit_code != 0:\n        sys.exit(exit_code)\n    return()\n# --\n# -- Convert String to Boolean\ndef str2bool(v):\n    if v.lower() in (\"true\"):\n        return True\n    elif v.lower() in (\"false\"):\n        return False\n    else:\n        return False\n# ## -->\n# -- Execute\nmain()",
    "scriptTypeWindows": "uapy",
    "scriptUnix": null,
    "scriptWindows": null,
    "sendVariables": "None",
    "sysId": "a461da0f255a4f6dbb1d3b7bfd1e9bbd",
    "templateType": "Script",
    "useCommonScript": true,
    "variablePrefix": "uainst",
    "waitForOutput": false
}